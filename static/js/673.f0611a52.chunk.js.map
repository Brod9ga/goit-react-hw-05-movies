{"version":3,"file":"static/js/673.f0611a52.chunk.js","mappings":"iPAIaA,EAAU,WACrB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,SAC9BC,GAAWC,EAAAA,EAAAA,MAiCjB,OAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAESC,EAAAA,EAAAA,IAAiBN,GAF1B,OAERO,EAFQ,OAGdX,EAAUW,EAASC,SACnBC,QAAQC,IAAIV,GAJE,gDAMdS,QAAQE,MAAR,MANc,yDAAH,qDAUfN,GACD,GAAE,CAACL,KAGF,4BACE,kBAAMY,SArBW,SAAAC,GACnBA,EAAMC,iBATS,SAAArB,GAEf,GAAiB,KADAA,EAAKsB,OAEbC,MACL,6DAGL,CAGCJ,CAASnB,GACTM,EAAe,CAAEkB,MAAOxB,GACzB,EAiBG,WACE,kBACEyB,UAAU,QACVC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,MAAO9B,EACP+B,SAzCS,SAAAX,GACfnB,EAAQmB,EAAMY,OAAOF,MACtB,KAyCK,mBAAQJ,KAAK,SAAb,wBAEF,wBACGxB,EAAO+B,KAAI,SAAAC,GACV,OACE,SAAC,KAAD,CACEC,MAAO,CAAEC,KAAM3B,GACfgB,UAAU,WAEVY,GAAE,mBAAcH,EAAMI,IAJxB,SAMGJ,EAAMK,OAHFL,EAAMI,GAMhB,QAIR,EC5DD,EAPgB,WACd,OACE,0BACI,SAACxC,EAAD,KAGP,C","sources":["components/MoviesC.jsx","Pages/Movies.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { fetchMovieAtWord } from './fetches';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nexport const MoviesC = () => {\n  const [word, setWord] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParam] = useSearchParams();\n  const searchTerm = searchParams.get('query');\n  const location = useLocation();\n\n  const onChange = event => {\n    setWord(event.target.value);\n  };\n\n  const onSubmit = word => {\n    const wordTrim = word.trim();\n    if (wordTrim === '') {\n      return alert(\n        'You did not specify data for the search, please try again!'\n      );\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(word);\n    setSearchParam({ query: word });\n  };\n  useEffect(() => {\n    const fetchFilm = async () => {\n      try {\n        const response = await fetchMovieAtWord(searchTerm);\n        setMovies(response.results);\n        console.log(searchTerm);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchFilm();\n  }, [searchTerm]);\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          className=\"input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n          value={word}\n          onChange={onChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      <ul>\n        {movies.map(movie => {\n          return (\n            <Link\n              state={{ from: location }}\n              className=\"filmItem\"\n              key={movie.id}\n              to={`/ditails/${movie.id}`}\n            >\n              {movie.title}\n            </Link>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n","import { MoviesC } from 'components/MoviesC'\nimport React from 'react'\n\n\n\n const Movies = () => {\n  return (\n    <div>\n        <MoviesC/>\n    </div>\n  )\n}\nexport default Movies"],"names":["MoviesC","useState","word","setWord","movies","setMovies","useSearchParams","searchParams","setSearchParam","searchTerm","get","location","useLocation","useEffect","fetchFilm","fetchMovieAtWord","response","results","console","log","error","onSubmit","event","preventDefault","trim","alert","query","className","type","autoComplete","autoFocus","placeholder","value","onChange","target","map","movie","state","from","to","id","title"],"sourceRoot":""}